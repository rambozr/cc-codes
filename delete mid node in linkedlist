
#include <iostream>
using namespace std;

// Node structure
struct Node {
    int data;
    Node* next;
    Node(int val) {
        data = val;
        next = NULL;
    }
};

// Function to find and delete middle node
void deleteMiddle(Node*& head) {
    if (head == NULL || head->next == NULL) {
        // If list is empty or has one node, delete it
        delete head;
        head = NULL;
        return;
    }

    Node* slow = head;
    Node* fast = head;
    Node* prev = NULL;

    // Move slow by 1 and fast by 2
    while (fast != NULL && fast->next != NULL) {
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }

    // Delete middle node (slow)
    prev->next = slow->next;
    delete slow;
}

// Utility function to print linked list
void printList(Node* head) {
    while (head != NULL) {
        cout << head->data << " ";
        head = head->next;
    }
    cout << endl;
}

int main() {
    // Create linked list: 1 -> 2 -> 3 -> 4 -> 5
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);

    cout << "Original list: ";
    printList(head);

    deleteMiddle(head);

    cout << "After deleting middle: ";
    printList(head);

    return 0;
}
