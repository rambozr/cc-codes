#include <iostream>
#include <stack>
using namespace std;

class MyQueue {
    stack<int> s1, s2;

public:
    // add element to queue
    void push(int x) {
        s1.push(x);
    }

    // remove front element
    int pop() {
        // move all from s1 to s2
        while (!s1.empty()) {
            s2.push(s1.top());
            s1.pop();
        }
        int val = s2.top(); // front element
        s2.pop();

        // move back from s2 to s1
        while (!s2.empty()) {
            s1.push(s2.top());
            s2.pop();
        }
        return val;
    }

    // get front element
    int front() {
        while (!s1.empty()) {
            s2.push(s1.top());
            s1.pop();
        }
        int val = s2.top();

        while (!s2.empty()) {
            s1.push(s2.top());
            s2.pop();
        }
        return val;
    }

    bool empty() {
        return s1.empty();
    }
};

int main() {
    MyQueue q;
    q.push(10);
    q.push(20);
    q.push(30);

    cout << q.front() << endl; // 10
    cout << q.pop() << endl;   // 10
    cout << q.front() << endl; // 20
    cout << q.pop() << endl;   // 20
    cout << q.pop() << endl;   // 30

    if (q.empty()) cout << "Queue is empty" << endl;

    return 0;
}
